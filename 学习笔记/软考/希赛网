【1】State设计模式，
表面看起来，一个大对象会有，不同的行为输入同一个程序，会得到不同的结果。即内部的变化而变化。
内部状态改变

混淆：将请求封装为对象，从而可以使用不同的请求对客户进行参数化。结果区别应该是多个接口函数。

客户程序的主要接口，用的是表层函数，而State（）再下面一些。

【2】自底向上、自顶向下
优缺点
自顶向下
较早验证业务逻辑，主要控制和判断点、功能
只需要一个驱动，减少驱动器的开发费用，故障隔离？

桩程序开发量大；
底层验证迟

适用于产品控制结构比较清晰和稳定；希望尽早看到产品的系统功能行为。
高层接口变化小；底层接口未定义或经常修改。风险大。


自底向上
较早验证底层组建。
效率较高
并行集成？
减少桩 故障隔离+1

驱动开发量大，高层验证，接口变化。


【3】瀑布 原型 增量 螺旋


【4】软件维护
    软件维护的分类
    在系统运行过程中，软件需要维护的原因是多样的，根据维护的原因不同，可以将软件维护分为以下四种：
    （1）改正性/正确性维护。为了识别和纠正软件错误、改正软件性能上的缺陷、排除实施中的误使用，应当进行的诊断和改正错误的过程就称为改正性维护。
    （2）适应性维护。在使用过程中，外部环境（新的硬、软件配置）、数据环境（数据库、数据格式、数据输入/输出方式、数据存储介质）可能发生变化。为使软件适应这种变化，而去修改软件的过程就称为适应性维护。
    （3）完善性维护。在软件的使用过程中，用户往往会对软件提出新的功能与性能要求。为了满足这些要求，需要修改或再开发软件，以扩充软件功能、增强软件性能、改进加工效率、提高软件的可维护性。这种情况下进行的维护活动称为完善性维护。
    （4）预防性维护。这是指预先提高软件的可维护性、可靠性等，为以后进一步改进软件打下良好基础。通常，预防性维护可定义为“把今天的方法学用于昨天的系统以满足明天的需要”。也就是说，采用先进的软件工程方法对需要维护的软件或软件中的某一部分（重新）进行设计、编码和测试。
    要注意，国家标准《软件维护指南》（GB/T 14079-1993）将软件维护分为改正性维护、适应性维护和完善性维护三种类型。
    
    防错性的程序设计，可以减少在系统运行时发生错误，有效地控制正确性维护的成本。

【5】与 或 同或 异或
同或 相同的为1           
异或 不同的为1     01上溢 10下溢       溢出时对两个符号位进行异或运算，结果为1

【6】模块化
模块的内聚性表现了模块内部各个子成分功能的集中程度，分为6级

偶然内聚 逻辑内聚 时间内据 通信内聚 顺序内聚 功能内聚
----------------------------------------------->
内聚性低                                 内聚性搞

（1） 偶然内聚。模块中的代码无法定义其不同功能的调用。但它使该模块能执行不同的功能，这种模块称为巧合强度模块。
（2） 逻辑内聚。这种模块把几种相关的功能组合在一起， 每次被调用时，由传送给模块参数来确定该模块应完成哪一种功能
（3） 时间内聚：把需要同时执行的动作组合在一起形成的模块为时间内聚模块。
（4） 过程内聚：构件或者操作的组合方式是，允许在调用前面的构件或操作之后，马上调用后面的构件或操作，即使两者之间没有数据进行传递。
（5） 通信内聚：指模块内所有处理元素都在同一个数据结构上操作（有时称之为信息内聚），或者指各处理使用相同的输入数据或者产生相同的输出数据。
（6） 顺序内聚：指一个模块中各个处理元素都密切相关于同一功能且必须顺序执行，前一功能元素输出就是下一功能元素的输入。即一个模块完成多个功能，这些模块又必须顺序执行。
（7） 功能内聚：这是最强的内聚，指模块内所有元素共同完成一个功能，联系紧密，缺一不可。

【7】UML
聚合 泛化 传递？ 迭代？
组合 


【8】选择语言开发
可以选择将来是否能够占据市场主导地位

全局变量和全局函数不是一种很好的程序设计风格
有些已经放弃支持

【9】矢量图与位图的显示速度
矢量图若是用于显示风景图等色彩丰富，层次较多的图片。函数的转换过程将会很长。可能位图显示不需要CPU的计算。只需要传输。
应用于AUTOCAD，线框图。

需要考虑假设

【10】边界对象、MVC
系统与参与者之间的接口，该对象从参与者处收集信息，并将之转换为二种被实体对象M和控制对象C使用的形式。

那么选项只能是MVC的特点？
模型-应用问题域种包含的抽象领域知识；
视图-将应用问题域中包含的抽象领域知识呈现给用户的方法；一个模型可以用作于多个视图；
控制器-用户界面对用户输入的响应方式；



【11】静态成员。C++的一种类
C++使用静态成员解决同一个类的不同对象的数据共享。
被类的所有对象共享，而不是属于某个对象。静态成员分为静态成员变量和静态方法。
静态成员变量的值可以被更新。所有对象该静态成员变量值都被更新。
静态成员函数可以直接访问静态成员，但不能直接访问非静态成员。


【12】排序与查找 
各种排序的过程。基本思想


【13】面对对象分析过程
第一步 定义服务、取定附加的系统约束以及定义类和对象的前提是要确定问题域。


【14】ISO/IEC软件质量模型
图 外部和内部质量
易用性|                       维护性|                    可靠性|
      |-易学性                     |-易分析性                  |-成熟性
      |-吸引性                     |-易改变性                  |-容错性
      |-易用性的依从性              |-稳定性                    |-易恢复性
      |-

                               |-   各个性的依从性
 
【15】著作权，
著名权、修改权、保护作品完整权的保护期不受限制。
自软件完成创作之日

【16】文法
上下文无关法 足够强的表达力来表示大多数程序    设计语言的语法规则；

【17】内存编址
K=2^10
按字节编址，一个地址代表一个字节，即要地址x字节8才是容量

【18】文法推测
有复杂 先复杂，第二次用简单

【19】开发小组沟通路径公式
n*（n-1）/2

【20】补码
用代表范围为2^n-1可以排除

【21】背包问题
0-1背包是   完整背包
部分背包问题。

【22】二叉树节点


【23】数据流图DFD
实例?
顶层数据流图 描述成一个处理过程，其他的是和这个处理过程相关的输入输出流。
实体、数据存储、处理过程和数据流四部分。


【24】数据库管理系统中的安全性控制机制
有权限机制
视图机制
数据加密

完整性指的是数据的正确性和相容性，针对数据元素的。属于完整性约束机制。

【25】McCabe度量
程序流图的简单路径
=McCabe度量=判定节点加一，原来我用的是环状加一

【26】MP3
命名来源是MPEG-1 Audio 压缩标准+3 layer编码层 1是基础层，2、3的复杂度压缩比高，但要更复杂解码器

【27】颜色图计算 灰度图像，最大灰度数目
图像深度是指存储每个像素所用的位数，若为b位 则最多颜色数或灰度级为2^b种
彩色RGB计算，三个分量像素位分别为442，则2^4+4+2 这样计算

【28】循环队列指针计算
多次出对入队操作导致位置错位，需要与存储容量进行求模进行修正。（头加容量-1）+（M）%M

【29】流水线计算公式 第一条t+（总共命令数）*子流程最长时间。等待第一条指令完成时间+最长命令的时间条数

【30】交换机与集线器
交换机的各个端口形成广播域
集线器所有端口在同一个广播域 旁边有中继器

【31】冗余技术
结构冗余
信息冗余
时间冗余
冗余附加

