【概念】
二叉排序树 Binary Search Tree 二叉搜索树 或者具有以下性质的二叉树

左子树--
      |-空
      |-非空  左子树结点值小于根节点
      
      
右子树--
      |-空
      |-非空  右子树结点值大于根节点
      
左右子树也是一颗二叉排序树

查找关键字就是先和根结点进行比较：小于，在左子树中同样比较操作直到找到 结果空或成功
右子树---

目的不是为了排序，而是提高查找和插入删除关键字速度 ，以因为有序和树形结构

【】

递归

非递归

查找*

插入**
1）空树：陈宫
2）树不空
1存在    失败
2不存在  检查根节点的值


|
构造**

插入（）
https://www.youtube.com/watch?v=QL0dCelyRYg  12：00
ASL

删除**
1）叶子节点
2）仅有左子树或者右子树的结点
3）左右子树都有结点
找到待删除节点的直接前驱或后继 用该节点替换
高度不会变



















